import System.IO
import XMonad
import XMonad.Actions.CycleWS
import XMonad.Actions.WindowGo
import XMonad.Config.Desktop (desktopLayoutModifiers)
import XMonad.Hooks.DynamicLog
import XMonad.Hooks.ManageDocks
import XMonad.Hooks.ManageHelpers
import XMonad.Layout.DragPane
import XMonad.Layout.MultiToggle
import XMonad.Layout.MultiToggle.Instances
import XMonad.Layout.Named
import XMonad.Layout.Spiral
import qualified XMonad.StackSet as W
import XMonad.Util.EZConfig
import XMonad.Util.Run
import XMonad.Util.Run(spawnPipe)
import XMonad.Util.WorkspaceCompare


-- Config {{{
-- trayer'
trayer' = "trayer --edge top --align left --SetDockType true --SetPartialStrut false --expand true --widthtype percent --width 5 --transparent true --tint 0x222222 --height 16"

-- dropbox
dropbox' = "dropbox -d"

-- feh'
feh' = "feh --bg-scale ~/wallpaper"

-- Terminal'
terminal' = "sakura -e tmux"

-- Layout'
tall = Tall 1 (10/100) (1/2)
layout' = mkToggle1 FULL $ desktopLayoutModifiers (named "V" tall ||| (named "H" $ Mirror tall))

-- Workspaces'
workspaces' = ["1:sakura", "2:web", "3:twitter", "4", "5:image", "6:pdf", "7:misc", "8:irc", "9:skype"]

-- ManageHook'
manageHook' :: ManageHook
manageHook' = (composeAll . concat $
    [ [resource  =? r --> doIgnore              | r <- myIgnores    ]
    , [name      =? n --> doCenterFloat         | n <- myNames      ]
    , [className =? c --> doShift "1:sakura"    | c <- mySakuras    ]
    , [className =? c --> doShift "2:web"       | c <- myWebs       ]
    , [className =? c --> doShift "3:twitter"   | c <- myTwitters   ]
    , [className =? c --> doShift "5:image"     | c <- myImages     ]
    , [className =? c --> doShift "6:pdf"       | c <- myPdfs       ]
    , [className =? c --> doShift "7:misc"      | c <- myMiscs      ]
    , [className =? c --> doShift "8:irc"       | c <- myIrcs       ]
    , [className =? c --> doShift "9:skype"     | c <- mySkypes     ]
    , [className =? c --> doCenterFloat         | c <- myFloats     ]
    ])
    where
        -- role & name
        role = stringProperty "WM_WINDOW_ROLE"
        name = stringProperty "WM_NAME"
        -- resources
        myIgnores  = ["desktop", "desktop_window", "notify-osd", "stalonetray", "trayer"]
        -- names
        myNames    = ["Google Chrome Options", "bashrun"]
        -- classnames
        mySakuras  = ["Sakura"]
        myWebs     = ["Google-chrome", "Firefox"]
        myTwitters = ["Mikutter.rb"]
        myImages   = ["Comix", "Gimp"]
        myPdfs     = ["Acroread", "Xpdf"]
        myMiscs    = ["Wpa_gui", "Thunar"]
        myIrcs     = ["Xchat"]
        mySkypes   = ["Skype"]
        myFloats   = ["VirtualBox", "Save As...", "Downloads", "Gimp", "Mikutter.rb"]

-- logHook'
logHook' xmproc = dynamicLogWithPP $ xmobarPP
    { ppOutput = hPutStrLn xmproc
    , ppTitle  = xmobarColor "#00ffff" "" . shorten 100
    }

-- additionalKeysP'
additionalKeysP' = [
      ("M-q", spawn "killall trayer && xmonad --recompile && xmonad --restart")
    , ("C-M-1", runOrRaise "sakura"         (className =? "Sakura"))
    , ("C-M-2", runOrRaise "google-chrome"  (className =? "Google-chrome"))
    , ("C-M-3", runOrRaise "mikutter"       (className =? "Mikutter.rb"))
    , ("C-M-9", runOrRaise "skype"          (className =? "Skype"))

    , ("C-M-x", spawn "xlock -mode blank")
    , ("C-M-q", spawn "gksu 'shutdown -h now'")

    , ("M-,",   moveTo Prev NonEmptyWS)
    , ("M-.",   moveTo Next NonEmptyWS)

    , ("M-f",   sendMessage $ Toggle FULL)
    ]
-- }}}


-- main {{{
main = do
    xmproc <- spawnPipe "/usr/bin/xmobar ~/.xmobarrc"
    spawn trayer'
    spawn dropbox'
    spawn feh'
    xmonad $ defaultConfig
        { modMask = mod4Mask
        , borderWidth        = 1
        , normalBorderColor  = "#777777"
        , focusedBorderColor = "#ffff00"
        , terminal           = terminal'
        , layoutHook         = layout'
        , workspaces         = workspaces'
        , manageHook         = manageHook' <+> manageDocks
        , logHook            = logHook' xmproc
        }
        `additionalKeysP` additionalKeysP'
-- }}}

